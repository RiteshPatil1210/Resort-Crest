{"version":3,"file":"devtool.js","names":["values: T","flags: Subscribable<T>","key: keyof T"],"sources":["../src/devtool.tsx"],"sourcesContent":["\"use client\"\nimport { useEffect, useSyncExternalStore, type ReactNode } from \"react\"\nimport { scan } from \"@devtool/core/index\"\nimport { userChildren } from \"@devtool/state\"\nimport { signal, type Signal } from \"@preact/signals\"\nimport type { Subscribable } from \"./ui\"\n\ntype DevtoolProps = {\n\tchildren: ReactNode\n}\n\n/**\n * @public\n * Devtool component that works with both React and Preact\n */\nexport const Devtool = ({ children }: DevtoolProps) => {\n\tuseEffect(() => {\n\t\tscan({\n\t\t\tenabled: true,\n\t\t\tshowToolbar: true,\n\t\t\tshowFPS: false,\n\t\t})\n\n\t\treturn () => {\n\t\t\tscan({\n\t\t\t\tenabled: false,\n\t\t\t})\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tuserChildren.value = children\n\t\treturn () => {\n\t\t\tuserChildren.value = null\n\t\t}\n\t}, [children])\n\n\treturn null\n}\n\ntype Values<T> = Signal<T> & Subscribable<T>\n\nexport function values<T>(values: T): Values<T> {\n\treturn signal(values) as Values<T>\n}\n\ntype Flags<T> = Signal<T> & Subscribable<T>\n\nexport function flags<T>(values: T): Flags<T> {\n\treturn signal(values) as Flags<T>\n}\n\nexport function useFlag<T>(flags: Subscribable<T>, key: keyof T) {\n\treturn useSyncExternalStore(\n\t\t(cb) => flags.subscribe(cb),\n\t\t() => {\n\t\t\treturn flags.value[key]\n\t\t},\n\t\t() => null,\n\t)\n}\n"],"mappings":";;;;;;;;AAeA,MAAa,UAAU,CAAC,EAAE,UAAwB,KAAK;AACtD,WAAU,MAAM;AACf,OAAK;GACJ,SAAS;GACT,aAAa;GACb,SAAS;EACT,EAAC;AAEF,SAAO,MAAM;AACZ,QAAK,EACJ,SAAS,MACT,EAAC;EACF;CACD,GAAE,CAAE,EAAC;AAEN,WAAU,MAAM;AACf,eAAa,QAAQ;AACrB,SAAO,MAAM;AACZ,gBAAa,QAAQ;EACrB;CACD,GAAE,CAAC,QAAS,EAAC;AAEd,QAAO;AACP;AAID,SAAgB,OAAUA,UAAsB;AAC/C,QAAO,OAAO,SAAO;AACrB;AAID,SAAgB,MAASA,UAAqB;AAC7C,QAAO,OAAO,SAAO;AACrB;AAED,SAAgB,QAAWC,SAAwBC,KAAc;AAChE,QAAO,qBACN,CAAC,OAAO,QAAM,UAAU,GAAG,EAC3B,MAAM;AACL,SAAO,QAAM,MAAM;CACnB,GACD,MAAM,KACN;AACD"}